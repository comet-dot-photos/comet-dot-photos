/* ==========================================================================
   cometPhotos.css
   Custom styling for lil-gui controls and dual-handled sliders
   used in the Comet.Photos interface. Provides consistent label
   alignment, row layouts, normalized spacing, button row handling,
   and proper canvas overlay layering.
   ========================================================================== */


/* ========================================================================
   Base layout
   ======================================================================== */

html, body {
    padding: 0;
    margin: 0;
    overflow: hidden;
}

canvas {
    width: 100%;
    height: 100%;
}


/* ========================================================================
   lil-gui overrides (rowKind + normalized vertical spacing)
   ======================================================================== */

.lil-gui {
  --width: 280px;        /* panel width */
  --name-width: 35%;     /* still used internally by lil-gui */
  --label-width: 95px;   /* fixed label column width for consistency */
  --btn-h: 20px;         /* button height baseline */
}

/* ---------- Base row + controller layout ---------- */
.lil-gui .gui-row {
  display: flex;
  align-items: center;
  gap: 0;
}
.lil-gui .gui-row .controller {
  display: flex;
  align-items: center;
  flex: 0 0 auto;
  margin: 0;
}
.lil-gui .gui-row .controller .name {
  width: var(--label-width);  /* fixed width ensures even alignment */
  min-width: var(--label-width);
  flex: 0 0 auto;
  padding-right: 4px;
}
/* Default two-control rows: push the second control to the right */
.lil-gui .gui-row .controller:last-child { margin-left: auto; }

/* ---------- Button handling via rowKind ---------- */
/* Only button controllers hide their left-hand label */
.lil-gui .gui-row .controller.has-button .name { display: none; }

/* PURE button rows (rowKind: "buttons") → fill the row evenly */
.lil-gui .gui-row.row-buttons { gap: 1px; }
.lil-gui .gui-row.row-buttons .controller { flex: 1 1 0; min-width: 0; }
.lil-gui .gui-row.row-buttons .controller:last-child { margin-left: 0; }
.lil-gui .gui-row.row-buttons .controller button {
  width: 100%;            /* fill available width */
  min-width: 0;
  display: inline-flex;   /* center text vertically */
  align-items: center;
  justify-content: center;
  height: var(--btn-h);
  line-height: var(--btn-h);
  padding: 0 8px;
  box-sizing: border-box;
}

/* MIXED rows (rowKind: "mixed-buttons") → normal control  */
.lil-gui .gui-row.row-mixed-buttons { gap: 6px; }
.lil-gui .gui-row.row-mixed-buttons .controller:last-child { margin-left: 0; }
.lil-gui .gui-row.row-mixed-buttons .controller.has-button { flex: 0 0 auto; }
.lil-gui .gui-row.row-mixed-buttons .controller.has-button button {
  width: auto;            /* shrink to fit content */
  min-width: 0;
  padding: 0 6px;         /* smaller arrows */
  height: var(--btn-h);
  line-height: var(--btn-h);
}

/* Special case: buttons flagged as largeFont in schema */
.lil-gui .controller.has-button.large-font-button button {
  font-size: 18px; 
}

/* ---------- Normalized vertical spacing ---------- */
/* Consistent 4px rhythm for every row inside a folder */
.lil-gui > .children > div > .children > * {
  margin-top: 4px;
  margin-bottom: 0;   /* remove lil-gui’s default bottom margin on plain controls */
}
.lil-gui > .children > div > .children > *:first-child { margin-top: 0; }

/* Folder content: add breathing room above first row, no extra at bottom */
.lil-gui > .children > div > .children {
  padding-top: 4px;
  padding-bottom: 0;  /* section-to-section gap comes from the title margin */
}

/* ---------- Dual-slider fixes ---------- */
/* force consistent width of numeric input boxes + full-width track */
.lil-gui .controller.number.hasSlider input { min-width: 36px; max-width: 36px; }
.lil-gui .controller.number.hasSlider input.slider {
  width: 100%;
  margin-left: 0;
  background: transparent;
  min-width: initial;
  max-width: initial;
}
/* Hide spinner arrows only on dual slider number boxes */
.lil-gui .controller.number.hasSlider input[type="number"]::-webkit-outer-spin-button,
.lil-gui .controller.number.hasSlider input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.lil-gui .controller.number.hasSlider input[type="number"] {
  -moz-appearance: textfield;
  appearance: textfield;
}

/* ==== Multiselect (checkbox-dropdown) ==== */
.lil-gui .controller .widget { overflow: visible; height: auto; } /* allow overlays */

.ms-btn {
  width: 100%;
  display: inline-flex; align-items: center; justify-content: space-between;
  padding: 6px 8px; border: 1px solid rgba(255,255,255,.12); border-radius: 6px;
  background: rgba(255,255,255,.08); color: inherit; cursor: pointer;
}
.ms-caret { opacity: .7; margin-left: .5em; }

/* Multiselect dropdown popover */
.ms-pop {
  position: fixed;
  z-index: 100000;
  display: none;
  background: #1e1e1e;
  color: #eee;
  border: 1px solid rgba(255,255,255,.14);
  border-radius: 10px;
  box-shadow: 0 12px 32px rgba(0,0,0,.45);
  padding: 8px;
  min-width: 220px;
  max-width: 340px;

  /* match lil-gui font */
  font: inherit;
  line-height: 1.2;
}
.ms-pop.open { display: block; }

.ms-actions { display: flex; gap: 8px; margin-bottom: 8px; }
.ms-actions button {
  flex: 1; padding: 6px; border: 1px solid rgba(255,255,255,.14);
  background: #2a2a2a; color: inherit; border-radius: 8px; cursor: pointer;
}

.ms-list {
  max-height: 260px; overflow: auto; padding: 6px;
  border: 1px solid rgba(255,255,255,.1); border-radius: 8px; background: #121212;
}
.ms-item { display: flex; align-items: center; gap: .6em; padding: 6px 2px; }

.controller.is-disabled .ms-btn { opacity: .5; pointer-events: none; }

/* Keep lil-GUI font, but make everything in the popover larger */
.ms-pop,
.ms-pop button,
.ms-pop .ms-item,
.ms-pop .ms-item span {
  font-family: inherit;   /* same font as lil-GUI */
  font-size: 1.1em;      /* 10% larger */
  line-height: 1.3;       /* loosen spacing slightly */
}

/* Begin style checkboxes inside the multiselect */
.ms-pop input[type="checkbox"] {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 14px;
  height: 14px;
  border: 2px solid #fff;     /* white border */
  border-radius: 3px;
  cursor: pointer;
  background: transparent;    /* no fill when unchecked */
  vertical-align: middle;
}

/* Checked state: cyan fill + black ✓ mark */
.ms-pop input[type="checkbox"]:checked {
  background-color: rgb(41, 201, 255);
  border-color: rgb(41, 201, 255);

  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 10'><polyline points='1.5 6 4.5 9 10.5 1' fill='none' stroke='black' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/></svg>");
  background-repeat: no-repeat;
  background-position: center;
  background-size: 80% 80%;
}
/* End checkbox inside multiselect styling */


/* ---------- Folder headers ---------- */
/* vertical gap between folders: controls gap (4px) comes from title margin */
.lil-gui > .children > div + div > .title { margin-top: 4px !important; }

/* ---------- Touch handling ---------- */
/* Prevent touch scrolling conflicts with sliders */
.lil-gui.allow-touch-styles.root.autoPlace { touch-action: pan-y; }


/* ========================================================================
   Dual-handled slider custom track styling
   ======================================================================== */

.flex-container { display: flex; align-items: center; }

.slider-container {
    position: relative;
    width: 96px;
    height: var(--widget-height);
    background: rgb(66,66,66);
    touch-action: none;  /* prevent browser scroll/zoom gestures here */
}
.slider-container:hover {
    opacity: 1;
    background-color: rgb(79, 79, 79); /* darker on hover */
    cursor: ew-resize;
}

.slider {
    width: 96px;
    height: var(--widget-height);
}

input[type="range"] {
    position: absolute;
    width: 100%;
    height: var(--widget-height);
    pointer-events: none; /* let mouse events fall through to both thumbs */
    -webkit-appearance: none;
    appearance: none;
    background: transparent;
    margin: 0;
}

/* slider thumbs = thin blue bars */
input[type="range"]::-webkit-slider-thumb {
    pointer-events: none;
    width: 1.62px;
    height: var(--widget-height);
    background: rgb(41, 201, 255);
    cursor: ew-resize;
    -webkit-appearance: none;
    appearance: none;
    margin-top: 0px;
}
input[type="range"]::-moz-range-thumb {
    pointer-events: none;
    width: 1.62px;
    height: var(--widget-height);
    background: rgb(41, 201, 255);
    cursor: ew-resize;
    margin-top: 0px;
}

.slider-track {
    position: absolute;
    height: var(--widget-height);
    background: rgb(66, 66, 66);
    top: 50%;
    transform: translateY(-50%);
    width: 100%;
    z-index: -1; /* sit behind thumbs */
}

/* Dual Slider Disabled Styling */
.dual-slider-template.is-disabled,
.controller.is-disabled {
  opacity: 0.5;
  pointer-events: none;
}


/* ========================================================================
   Canvas layering
   ======================================================================== */

#threeCanvas {
    position: absolute;
    z-index: 1;
}
#overlayCanvas {
    position: absolute;
    z-index: 2;
    pointer-events: none; /* overlay doesn’t block mouse input */
}

/* =========================================
   iPad / iPhone: font + iOS-only behavior
   (no sizing or layout overrides)
   ========================================= */
@media (pointer: coarse), (max-width: 1024px) {

  /* iOS: guard against accidental sideways scroll */
  html, body { overflow-x: hidden; }

  /* Buttons use the lil-gui font by default (incl. multiselect trigger) */
  .lil-gui .controller button { 
    font: inherit !important; 
  }

  /* Exception: mixed-button rows keep system UI look for contrast */
  .lil-gui .gui-row.row-mixed-buttons .controller button {
    font-family: -apple-system, system-ui, "Segoe UI", Roboto, Helvetica, Arial,
                 "Apple Color Emoji", "Segoe UI Emoji" !important;
  }

  /* Make skip arrows large/readable on mobile (font only) */
  .lil-gui .gui-row.row-mixed-buttons .controller.has-button.large-font-button button {
    font-size: 20px !important;
    line-height: 1.2;
  }

  /* Text / number inputs & selects match the panel font + size */
  .lil-gui input[type="text"],
  .lil-gui input[type="number"],
  .lil-gui .controller input[type="text"],
  .lil-gui .controller input[type="number"],
  .lil-gui select {
    font: inherit !important;
    font-size: inherit !important;
  }

  .lil-gui .controller.number input {
    font: inherit !important;
    font-size: inherit !important;
  }

  /* iOS: prevent Safari auto text-size inflation on focus */
  html { -webkit-text-size-adjust: 100%; }
}
